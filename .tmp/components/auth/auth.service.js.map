{"version":3,"sources":["../../../client/components/auth/auth.service.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CACvB,OAAO,CAAC,MAAM,EAAE,SAAS,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE,YAAY,EAAE,EAAE,EAAE;AACnF,MAAI,WAAW,GAAG,EAAE,CAAC;AACrB,MAAG,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;AAC5B,eAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;GAC1B;;AAED,SAAO;;;;;;;;;AASL,SAAK,EAAE,eAAS,IAAI,EAAE,QAAQ,EAAE;AAC9B,UAAI,EAAE,GAAG,QAAQ,IAAI,OAAO,CAAC,IAAI,CAAC;AAClC,UAAI,QAAQ,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;;AAE1B,WAAK,CAAC,IAAI,CAAC,aAAa,EAAE;AACxB,aAAK,EAAE,IAAI,CAAC,KAAK;AACjB,gBAAQ,EAAE,IAAI,CAAC,QAAQ;OACxB,CAAC,CACF,OAAO,CAAC,UAAS,IAAI,EAAE;AACrB,oBAAY,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AACtC,mBAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACzB,gBAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,eAAO,EAAE,EAAE,CAAC;OACb,CAAC,CACF,KAAK,CAAC,CAAA,UAAS,GAAG,EAAE;AAClB,YAAI,CAAC,MAAM,EAAE,CAAC;AACd,gBAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACrB,eAAO,EAAE,CAAC,GAAG,CAAC,CAAC;OAChB,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;AAEd,aAAO,QAAQ,CAAC,OAAO,CAAC;KACzB;;;;;;;AAOD,UAAM,EAAE,kBAAW;AACjB,kBAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAC7B,iBAAW,GAAG,EAAE,CAAC;KAClB;;;;;;;;;AASD,cAAU,EAAE,oBAAS,IAAI,EAAE,QAAQ,EAAE;AACnC,UAAI,EAAE,GAAG,QAAQ,IAAI,OAAO,CAAC,IAAI,CAAC;;AAElC,aAAO,IAAI,CAAC,IAAI,CAAC,IAAI,EACnB,UAAS,IAAI,EAAE;AACb,oBAAY,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AACtC,mBAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACzB,eAAO,EAAE,CAAC,IAAI,CAAC,CAAC;OACjB,EACD,CAAA,UAAS,GAAG,EAAE;AACZ,YAAI,CAAC,MAAM,EAAE,CAAC;AACd,eAAO,EAAE,CAAC,GAAG,CAAC,CAAC;OAChB,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC;KAC1B;;;;;;;;;;AAUD,kBAAc,EAAE,wBAAS,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE;AAC3D,UAAI,EAAE,GAAG,QAAQ,IAAI,OAAO,CAAC,IAAI,CAAC;;AAElC,aAAO,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,EAAE,WAAW,CAAC,GAAG,EAAE,EAAE;AAClD,mBAAW,EAAE,WAAW;AACxB,mBAAW,EAAE,WAAW;OACzB,EAAE,UAAS,IAAI,EAAE;AAChB,eAAO,EAAE,CAAC,IAAI,CAAC,CAAC;OACjB,EAAE,UAAS,GAAG,EAAE;AACf,eAAO,EAAE,CAAC,GAAG,CAAC,CAAC;OAChB,CAAC,CAAC,QAAQ,CAAC;KACb;;;;;;;AAOD,kBAAc,EAAE,0BAAW;AACzB,aAAO,WAAW,CAAC;KACpB;;;;;;;AAOD,cAAU,EAAE,sBAAW;AACrB,aAAO,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;KAC3C;;;;;AAKD,mBAAe,EAAE,yBAAS,EAAE,EAAE;AAC5B,UAAG,WAAW,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;AACzC,mBAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAW;AACnC,YAAE,CAAC,IAAI,CAAC,CAAC;SACV,CAAC,SAAM,CAAC,YAAW;AAClB,YAAE,CAAC,KAAK,CAAC,CAAC;SACX,CAAC,CAAC;OACJ,MAAM,IAAG,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;AAC5C,UAAE,CAAC,IAAI,CAAC,CAAC;OACV,MAAM;AACL,UAAE,CAAC,KAAK,CAAC,CAAC;OACX;KACF;;;;;;;AAOD,WAAO,EAAE,mBAAW;AAClB,aAAO,WAAW,CAAC,IAAI,KAAK,OAAO,CAAC;KACrC;;;;;AAKD,YAAQ,EAAE,oBAAW;AACnB,aAAO,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;KAClC;GACF,CAAC;CACH,CAAC,CAAC","file":"auth.service.js","sourcesContent":["'use strict';\r\n\r\nangular.module('biyblApp')\r\n  .factory('Auth', function Auth($location, $rootScope, $http, User, $cookieStore, $q) {\r\n    var currentUser = {};\r\n    if($cookieStore.get('token')) {\r\n      currentUser = User.get();\r\n    }\r\n\r\n    return {\r\n\r\n      /**\r\n       * Authenticate user and save token\r\n       *\r\n       * @param  {Object}   user     - login info\r\n       * @param  {Function} callback - optional\r\n       * @return {Promise}\r\n       */\r\n      login: function(user, callback) {\r\n        var cb = callback || angular.noop;\r\n        var deferred = $q.defer();\r\n\r\n        $http.post('/auth/local', {\r\n          email: user.email,\r\n          password: user.password\r\n        }).\r\n        success(function(data) {\r\n          $cookieStore.put('token', data.token);\r\n          currentUser = User.get();\r\n          deferred.resolve(data);\r\n          return cb();\r\n        }).\r\n        error(function(err) {\r\n          this.logout();\r\n          deferred.reject(err);\r\n          return cb(err);\r\n        }.bind(this));\r\n\r\n        return deferred.promise;\r\n      },\r\n\r\n      /**\r\n       * Delete access token and user info\r\n       *\r\n       * @param  {Function}\r\n       */\r\n      logout: function() {\r\n        $cookieStore.remove('token');\r\n        currentUser = {};\r\n      },\r\n\r\n      /**\r\n       * Create a new user\r\n       *\r\n       * @param  {Object}   user     - user info\r\n       * @param  {Function} callback - optional\r\n       * @return {Promise}\r\n       */\r\n      createUser: function(user, callback) {\r\n        var cb = callback || angular.noop;\r\n\r\n        return User.save(user,\r\n          function(data) {\r\n            $cookieStore.put('token', data.token);\r\n            currentUser = User.get();\r\n            return cb(user);\r\n          },\r\n          function(err) {\r\n            this.logout();\r\n            return cb(err);\r\n          }.bind(this)).$promise;\r\n      },\r\n\r\n      /**\r\n       * Change password\r\n       *\r\n       * @param  {String}   oldPassword\r\n       * @param  {String}   newPassword\r\n       * @param  {Function} callback    - optional\r\n       * @return {Promise}\r\n       */\r\n      changePassword: function(oldPassword, newPassword, callback) {\r\n        var cb = callback || angular.noop;\r\n\r\n        return User.changePassword({ id: currentUser._id }, {\r\n          oldPassword: oldPassword,\r\n          newPassword: newPassword\r\n        }, function(user) {\r\n          return cb(user);\r\n        }, function(err) {\r\n          return cb(err);\r\n        }).$promise;\r\n      },\r\n\r\n      /**\r\n       * Gets all available info on authenticated user\r\n       *\r\n       * @return {Object} user\r\n       */\r\n      getCurrentUser: function() {\r\n        return currentUser;\r\n      },\r\n\r\n      /**\r\n       * Check if a user is logged in\r\n       *\r\n       * @return {Boolean}\r\n       */\r\n      isLoggedIn: function() {\r\n        return currentUser.hasOwnProperty('role');\r\n      },\r\n\r\n      /**\r\n       * Waits for currentUser to resolve before checking if user is logged in\r\n       */\r\n      isLoggedInAsync: function(cb) {\r\n        if(currentUser.hasOwnProperty('$promise')) {\r\n          currentUser.$promise.then(function() {\r\n            cb(true);\r\n          }).catch(function() {\r\n            cb(false);\r\n          });\r\n        } else if(currentUser.hasOwnProperty('role')) {\r\n          cb(true);\r\n        } else {\r\n          cb(false);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Check if a user is an admin\r\n       *\r\n       * @return {Boolean}\r\n       */\r\n      isAdmin: function() {\r\n        return currentUser.role === 'admin';\r\n      },\r\n\r\n      /**\r\n       * Get auth token\r\n       */\r\n      getToken: function() {\r\n        return $cookieStore.get('token');\r\n      }\r\n    };\r\n  });\r\n"]}